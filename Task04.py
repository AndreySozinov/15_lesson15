# üìå –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ —Ç–µ–∫—Å—Ç –≤–∏–¥–∞: ‚Äú1-–π —á–µ—Ç–≤–µ—Ä–≥ –Ω–æ—è–±—Ä—è‚Äù, ‚Äú3-—è —Å—Ä–µ–¥–∞ –º–∞—è‚Äù –∏ —Ç.–ø.
# üìå –ü—Ä–µ–æ–±—Ä–∞–∑—É–π—Ç–µ –µ–≥–æ –≤ –¥–∞—Ç—É –≤ —Ç–µ–∫—É—â–µ–º –≥–æ–¥—É.
# üìå –õ–æ–≥–∏—Ä—É–π—Ç–µ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—É.
from datetime import datetime
import logging

logging.basicConfig(filename=f'date.log',
                    encoding='utf-8',
                    level=logging.ERROR)
logger = logging.getLogger(__name__)


def string_to_date(string_entry: str):
    days_of_week = {'–ø–æ–Ω': 0, '–≤—Ç–æ': 1, '—Å—Ä–µ': 2,
                    '—á–µ—Ç': 3, '–ø—è—Ç': 4, '—Å—É–±': 5, '–≤–æ—Å': 6}
    months = {'—è–Ω–≤': 1, '—Ñ–µ–≤': 2, '–º–∞—Ä': 3, '–∞–ø—Ä': 4,
              '–º–∞—è': 5, '–∏—é–Ω': 6, '–∏—é–ª': 7, '–∞–≤–≥': 8,
              '—Å–µ–Ω': 9, '–æ–∫—Ç': 10, '–Ω–æ—è': 11, '–¥–µ–∫': 12}
    try:
        week, day, month = string_entry.lower().split()
    except ValueError as e:
        logger.info(e)

    week_num = int(week[0])
    weekday = days_of_week[day[:3]]
    month = months[month[:3]]
    year = datetime.now().year

    count = 0
    for i in range(1, 32):
        date_ = datetime(day=i, month=month, year=year)
        if date_.weekday() == weekday:
            count += 1
            if count == week_num:
                return date_.date()


if __name__ == '__main__':
    print(string_to_date('1-–π —á–µ—Ç–≤–µ—Ä–≥ –Ω–æ—è–±—Ä—è'))
    print(string_to_date('3-—è —Å—Ä–µ–¥–∞ –º–∞—è'))
    print(string_to_date('5-–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –∞–ø—Ä–µ–ª—è'))
